{"version":3,"file":"static/js/109.bcde2544.chunk.js","mappings":"gKACA,EAAyB,2B,uCCYzB,MARA,SAAoBA,GAChB,OACA,iBAAKC,UAAWC,EAAhB,WACI,SAACC,EAAA,EAAD,CAAQC,GAAK,CAACC,QAASC,EAAAA,EAAAA,KAAiBC,MAAO,GAAIC,OAAQ,IAA3D,SAAkER,EAAMS,KAAKC,OAAO,GAAGC,iBACvF,SAAC,KAAD,CAASC,GAAI,YAAcZ,EAAMa,GAAjC,SAAsCb,EAAMS,WCRpD,EAA0B,yBCO1B,MANA,SAAiBT,GACb,OACI,gBAAKC,UAAWC,EAAhB,SAAkCF,EAAMc,WCHhD,EAA0B,yBAA1B,EAAkE,8BAAlE,EAA4I,0BAA5I,EAAwL,iC,oBCAxL,GAAgB,WAAa,iC,oBCkC7B,MA7BA,SAAqBd,GAYjB,OACI,SAAC,KAAD,CAAQe,cAAe,CAAEC,eAAgB,IAAMC,SAVpC,SAACC,EAAD,GAAkC,IAArBC,EAAoB,EAApBA,cACxBC,YAAW,WACPpB,EAAMqB,qBAAqBH,EAASF,gBACpChB,EAAMsB,cACNJ,EAASF,eAAiB,GAC1BG,GAAc,KACf,MAIH,SACK,gBAAGI,EAAH,EAAGA,aAAH,OACG,SAAC,KAAD,WACI,iBAAKtB,UAAWC,EAAAA,WAAhB,WACI,gBAAKD,UAAWC,EAAAA,aAAhB,UACI,SAAC,KAAD,CAAOsB,KAAM,OAAQf,KAAM,iBAAkBgB,YAAa,0BAE9D,gBAAKxB,UAAWC,EAAAA,cAAhB,UACI,SAACwB,EAAA,EAAD,CAAQF,KAAM,SAAUG,SAAUJ,EAAlC,UAAgD,SAACK,EAAA,EAAD,iBCQ5E,MA7BA,SAAiB5B,GAEb,IAAI6B,EAAkB7B,EAAM8B,YAAYC,YAAYC,KAAI,SAACC,GACrD,OACI,SAAC,EAAD,CAAYxB,KAAMwB,EAAOxB,KACbI,GAAIoB,EAAOpB,GACXqB,WAAYD,EAAOC,gBAInCC,EAAmBnC,EAAM8B,YAAYM,aAAaJ,KAAI,SAAClB,GACvD,OAAO,SAAC,EAAD,CAASA,QAASA,EAAQA,aAGrC,OACI,iBAAKb,UAAWC,EAAhB,WACI,gBAAKD,UAAWC,EAAhB,SACK2B,KAEL,iBAAK5B,UAAWC,EAAhB,WACI,gBAAKD,UAAWC,EAAhB,SACKiC,KAEL,SAAC,EAAD,CAAab,YAAatB,EAAMsB,YACnBD,qBAAsBrB,EAAMqB,8B,mBCPzD,GAAegB,E,QAAAA,KACXC,EAAAA,EAAAA,KAlBkB,SAACC,GACnB,MAAO,CACHT,YAAaS,EAAMT,gBAIF,SAACU,GACtB,MAAO,CACHlB,YAAa,WACTkB,GAASC,EAAAA,EAAAA,QAEbpB,qBAAsB,SAACqB,GACnBF,GAASG,EAAAA,EAAAA,IAAkCD,SAOnDE,EAAAA,EAFJ,CAGEC,I,yBCxBEC,EAAyBC,EAAQ,MAKrCC,EAAQ,OAAU,EAElB,IAAIC,EAAiBH,EAAuBC,EAAQ,OAEhDG,EAAcH,EAAQ,KAEtBI,GAAW,EAAIF,EAAeG,UAAuB,EAAIF,EAAYG,KAAK,OAAQ,CACpFC,EAAG,0CACD,QAEJN,EAAQ,EAAUG","sources":["webpack://my-app/./src/components/Dialogs/DialogItem/DialogItem.module.css?beb9","components/Dialogs/DialogItem/DialogItem.js","webpack://my-app/./src/components/Dialogs/Message/Message.module.css?72d0","components/Dialogs/Message/Message.js","webpack://my-app/./src/components/Dialogs/Dialogs.module.css?1b2e","webpack://my-app/./src/components/Dialogs/DialogsForm/DialogsForm.module.css?b378","components/Dialogs/DialogsForm/DialogsForm.js","components/Dialogs/Dialogs.js","components/Dialogs/DialogsContainer.js","../node_modules/@mui/icons-material/Send.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"dialog\":\"DialogItem_dialog__JQUYn\"};","import classes from './DialogItem.module.css';\nimport { NavLink } from 'react-router-dom';\nimport { Avatar } from '@mui/material';\nimport { deepOrange } from '@mui/material/colors';\n\nfunction DialogItem(props) {\n    return (\n    <div className={classes.dialog}>\n        <Avatar sx={ {bgcolor: deepOrange[500], width: 50, height: 50} }>{props.name.charAt(0).toUpperCase()}</Avatar>\n        <NavLink to={\"/dialogs/\" + props.id}>{props.name}</NavLink>\n    </div>\n    );\n}\nexport default DialogItem;","// extracted by mini-css-extract-plugin\nexport default {\"message\":\"Message_message__ibUBs\"};","import classes from './Message.module.css';\n\nfunction Message(props) {\n    return (\n        <div className={classes.message}>{props.message}</div>\n    );\n}\n\nexport default Message;","// extracted by mini-css-extract-plugin\nexport default {\"dialogs\":\"Dialogs_dialogs__8HA5c\",\"dialogsItems\":\"Dialogs_dialogsItems__11aOQ\",\"active\":\"Dialogs_active__X8jYi\",\"messages\":\"Dialogs_messages__WyGkp\",\"messagesWrapper\":\"Dialogs_messagesWrapper__BYLBX\"};","// extracted by mini-css-extract-plugin\nexport default {\"dialogForm\":\"DialogsForm_dialogForm__aYKLQ\"};","import React from \"react\";\r\nimport { Formik, Form, Field } from \"formik\";\r\nimport classes from './DialogsForm.module.css';\r\nimport { Button } from '@mui/material';\r\nimport SendIcon from '@mui/icons-material/Send';\r\n\r\nfunction DialogsForm(props) {\r\n    \r\n\r\n    let onSubmit = (formData, { setSubmitting }) => {\r\n        setTimeout(() => {\r\n            props.updateNewMessageText(formData.newMessageText);\r\n            props.sendMessage();\r\n            formData.newMessageText = '';\r\n            setSubmitting(false);\r\n        }, 400)\r\n    }\r\n\r\n    return (\r\n        <Formik initialValues={{ newMessageText: \"\" }} onSubmit={onSubmit}>\r\n            {({ isSubmitting }) => (\r\n                <Form>\r\n                    <div className={classes.dialogForm}>\r\n                        <div className={classes.messageInput}>\r\n                            <Field type={'text'} name={'newMessageText'} placeholder={'Write a message...'} />\r\n                        </div>\r\n                        <div className={classes.messageButton}>\r\n                            <Button type={'submit'} disabled={isSubmitting}><SendIcon /></Button>\r\n                        </div>\r\n                    </div>\r\n                </Form>\r\n            )}\r\n        </Formik>\r\n    )\r\n}\r\nexport default DialogsForm;","import DialogItem from './DialogItem/DialogItem';\nimport Message from './Message/Message';\nimport classes from './Dialogs.module.css';\nimport React from 'react';\nimport DialogsForm from './DialogsForm/DialogsForm';\n\nfunction Dialogs(props) {\n\n    let dialogsElements = props.dialogsPage.dialogsData.map((dialog) => {\n        return (\n            <DialogItem name={dialog.name}\n                        id={dialog.id}\n                        userAvatar={dialog.userAvatar} />\n        )\n    });\n\n    let messagesElements = props.dialogsPage.messagesData.map((message) => {\n        return <Message message={message.message} />\n    })\n\n    return (\n        <div className={classes.dialogs}>\n            <div className={classes.dialogsItems}>\n                {dialogsElements}\n            </div>\n            <div className={classes.messages}>\n                <div className={classes.messagesWrapper}>\n                    {messagesElements}\n                </div>\n                <DialogsForm sendMessage={props.sendMessage}\n                             updateNewMessageText={props.updateNewMessageText} />\n            </div>\n        </div>\n    );\n}\nexport default Dialogs;","import { sendMessageActionCreator, updateNewMessageTextActionCreator } from '../../redux/dialogs-reducer';\r\nimport Dialogs from './Dialogs';\r\nimport { connect } from 'react-redux';\r\nimport { withAuthRedirect } from '../../hoc/withAuthRedirect';\r\nimport { compose } from 'redux';\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        dialogsPage: state.dialogsPage,\r\n    }\r\n}\r\n\r\nlet mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        sendMessage: () => {\r\n            dispatch(sendMessageActionCreator());\r\n        },\r\n        updateNewMessageText: (text) => {\r\n            dispatch(updateNewMessageTextActionCreator(text));\r\n        }\r\n    }\r\n}\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, mapDispatchToProps),\r\n    withAuthRedirect\r\n)(Dialogs);","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _jsxRuntime = require(\"react/jsx-runtime\");\n\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M2.01 21 23 12 2.01 3 2 10l15 2-15 2z\"\n}), 'Send');\n\nexports.default = _default;"],"names":["props","className","classes","Avatar","sx","bgcolor","deepOrange","width","height","name","charAt","toUpperCase","to","id","message","initialValues","newMessageText","onSubmit","formData","setSubmitting","setTimeout","updateNewMessageText","sendMessage","isSubmitting","type","placeholder","Button","disabled","Send","dialogsElements","dialogsPage","dialogsData","map","dialog","userAvatar","messagesElements","messagesData","compose","connect","state","dispatch","sendMessageActionCreator","text","updateNewMessageTextActionCreator","withAuthRedirect","Dialogs","_interopRequireDefault","require","exports","_createSvgIcon","_jsxRuntime","_default","default","jsx","d"],"sourceRoot":""}